name: docs

# 监听分支
on:
  push:
    branches:
      - main      # 生产环境
      - develop   # 测试环境

jobs:
   build-and-deploy:
    runs-on: ubuntu-latest
    env:
      DOCKER_IMAGE: react-demo

    steps:
      - uses: actions/checkout@v4
        with:
          # “最近更新时间” 等 git 日志相关信息，需要拉取全部提交记录
          fetch-depth: 0
      - name: 设置 pnpm
        uses: pnpm/action-setup@v4
        with:
            version: '9.x' 
      - name: 设置 Node.js
        uses: actions/setup-node@v4
        with:
          # 选择要使用的 node 版本
          node-version: 22
          # 缓存 pnpm 依赖
          cache: pnpm

      - name: 安装依赖
        run: pnpm install --frozen-lockfile

      # 根据分支构建不同环境
      - name: Build Frontend
        run: |
          if [ "${GITHUB_REF}" == "refs/heads/main" ]; then
            echo "Building production..."
            pnpm build:prod
            TAG=prod
          else
            echo "Building test..."
            pnpm build
            TAG=test
          fi

      # 登录 Docker Hub
      - name: Login Docker
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Set Docker Image Tag
        id: set_tag
        run: |
           # 读取 package.json 中 version
           VERSION=$(jq -r '.version' package.json)
           echo "DOCKER_TAG=$VERSION" >> $GITHUB_ENV

      # 构建 Docker 镜像
      - name: Build Docker Image
        run: |
          echo "Building image with tag $DOCKER_TAG"
          docker build -t ${{ secrets.DOCKER_USERNAME }}/$DOCKER_IMAGE:$DOCKER_TAG .

      # 推送镜像
      - name: Push Docker Image
        run: docker push ${{ secrets.DOCKER_USERNAME }}/$DOCKER_IMAGE:$DOCKER_TAG